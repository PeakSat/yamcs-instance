async function d(t){let s=[],i=t.items;if(i&&i.length&&i[0].webkitGetAsEntry){let e=[];for(let n=0;n<i.length;n++){let r=i[n].webkitGetAsEntry();r&&e.push(r)}for(let n of e){let r=await f(n);s.push(...r)}}else for(let e=0;e<t.files.length;e++){let n=t.files.item(e);s.push(n)}return s}async function f(t,s=""){let i=[],e=s?`${s}/${t.name}`:t.name;if(t.isFile){let r=await p(t);r._fullPath=e,i.push(r)}else if(t.isDirectory){let n=t,r=[],l=n.createReader(),o=await c(l);for(;o.length;)r.push(...o),o=await c(l);for(let u of r){let a=await f(u,e);i.push(...a)}}return i}function p(t){return new Promise((s,i)=>{t.file(e=>{s(e)},e=>i(e))})}function c(t){return new Promise((s,i)=>{t.readEntries(e=>{s(e)},e=>i(e))})}export{d as a};
